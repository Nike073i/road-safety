<#@ template language="C#" #>
<#@ parameter type="System.String" name="Name" #>
<#@ output extension=".cs" #>
<#@ include file="../general/namespace.tt" #>
using FluentValidation;
using RoadSafety.BuildingBlocks.QueryStack.Cache;
using RoadSafety.BuildingBlocks.QueryStack.Cqrs;

namespace <#= namespaceResult #>
{
    public class <#= Name #>ViewModel
    {
        // Properties
    }
    
    public record <#= Name #>Query : CacheableQuery<<#= Name #>ViewModel?>;

    public class <#= Name #>QueryValidator : AbstractValidator<<#= Name #>Query>
    {
        public <#= Name #>QueryValidator()
        {

        }
    }

    // Move it to infrastructure project
    public class <#= Name #>QueryHandler(IConnectionFactory connectionFactory) : IQueryHandler<<#= Name #>Query, <#= Name #>ViewModel?>
    {
        private const string _sql = """
				SELECT *
                FROM schema_name.table_name
                WHERE id = @Id;
			""";

        public async Task<<#= Name #>ViewModel?> Handle(
            <#= Name #>Query request,
            CancellationToken cancellationToken
        ){
            using var connection = connectionFactory.CreateConnection();
            return await connection.QueryFirstOrDefaultAsync<<#= Name #>ViewModel>(_sql, new { request.Id });
        };
    }
}
