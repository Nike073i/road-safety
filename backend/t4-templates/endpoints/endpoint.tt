<#@ template language="C#" #>
<#@ parameter type="System.String" name="Name" #>
<#@ output extension=".cs" #>
<#@ include file="../general/namespace.tt" #>
using ErrorOr;
using Microsoft.AspNetCore.Mvc;
using RoadSafety.BuildingBlocks.Api.Endpoints;
using Microsoft.FeatureManagement;
using RoadSafety.BuildingBlocks.Api.FeatureManagement;
using RoadSafety.BuildingBlocks.CommandStack.Cqrs;

namespace <#= namespaceResult #>
{
	public class <#= Name #>Endpoint
	{
		public static Task<IResult> Handle(
			[FromBody] <#= Name #>Request input,
			ICommandDispatcher dispatcher,
			CancellationToken cancellationToken
		) =>
			input
				.ToErrorOr()
				.Then(input => new <#= Name #>Command(
                    // Parameters
                ))
				.ThenAsync(req => dispatcher.SendCommand(req, cancellationToken))
				.MatchResult(value =>
                    TypedResults.Ok(new <#= Name #>Response(value))
				);
	}

	public class <#= Name #>FeatureFilter(IFeatureManager featureManager)
		: FeatureFilterBase(featureManager)
	{
		protected override string FeatureName => "<#= Name #>";
	}
}
